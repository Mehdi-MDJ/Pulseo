import { useState, useRef, useEffect } from 'react';
import { Send, Bot, User, Sparkles, TrendingUp, DollarSign, Calendar, FileText } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Link } from 'wouter';

interface ConversationMessage {
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
  suggestions?: string[];
  actions?: RecommendedAction[];
}

interface RecommendedAction {
  type: string;
  label: string;
  url?: string;
}

export default function AIAssistantDemo() {
  const [messages, setMessages] = useState<ConversationMessage[]>([
    {
      role: 'assistant',
      content: 'Bonjour ! Je suis votre assistant IA personnel NurseLink. Je peux vous aider avec vos missions, n√©gocier des tarifs, planifier votre carri√®re ou optimiser votre profil. Comment puis-je vous accompagner aujourd\'hui ?',
      timestamp: new Date(),
      suggestions: [
        'Trouve-moi des missions adapt√©es',
        'Comment am√©liorer mon profil ?',
        'Planifie ma carri√®re',
        'Aide-moi √† n√©gocier un tarif'
      ]
    }
  ]);
  const [currentMessage, setCurrentMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(scrollToBottom, [messages]);

  // Donn√©es de d√©monstration pour les recommandations
  const demoRecommendations = {
    missions: [
      {
        title: "Infirmier de nuit - R√©animation",
        hourlyRate: 28,
        specialization: "R√©animation",
        establishment: "CHU Lyon Sud"
      },
      {
        title: "Infirmier Urgences",
        hourlyRate: 25,
        specialization: "Urgences", 
        establishment: "Clinique Saint-Joseph"
      },
      {
        title: "Infirmier P√©diatrie",
        hourlyRate: 26,
        specialization: "P√©diatrie",
        establishment: "H√¥pital des Enfants"
      }
    ]
  };

  const generateDemoResponse = (userMessage: string): ConversationMessage => {
    const lowerMessage = userMessage.toLowerCase();
    
    if (lowerMessage.includes('mission') || lowerMessage.includes('trouve')) {
      return {
        role: 'assistant',
        content: `J'ai analys√© votre profil et trouv√© 3 missions parfaitement adapt√©es √† vos comp√©tences en r√©animation. Voici mes recommandations bas√©es sur votre exp√©rience de 5 ans et votre sp√©cialisation :

üè• **Mission prioritaire :** Infirmier de nuit en R√©animation au CHU Lyon Sud
‚Ä¢ Tarif : 28‚Ç¨/h (excellent pour votre profil)
‚Ä¢ Compatibilit√© : 94% avec vos comp√©tences
‚Ä¢ Urgence : Haute - Besoin imm√©diat

Les deux autres missions sont √©galement tr√®s int√©ressantes avec des taux de compatibilit√© de 87% et 82%.`,
        timestamp: new Date(),
        suggestions: [
          'Postule √† cette mission',
          'Vois les autres missions',
          'N√©gocie le tarif',
          'Pr√©pare mon CV'
        ],
        actions: [
          { type: 'apply', label: 'üíº Postuler √† la mission prioritaire', url: '/contract-demo' },
          { type: 'view', label: 'üëÄ Voir toutes les missions' },
          { type: 'negotiate', label: 'üí∞ N√©gocier le tarif' }
        ]
      };
    }
    
    if (lowerMessage.includes('profil') || lowerMessage.includes('am√©liorer')) {
      return {
        role: 'assistant',
        content: `Analyse de votre profil termin√©e ! Voici mes recommandations pour optimiser votre attractivit√© :

‚úÖ **Points forts :**
‚Ä¢ Exp√©rience solide en r√©animation (5 ans)
‚Ä¢ Certifications √† jour (BLS, ACLS)
‚Ä¢ Disponibilit√© flexible (matin/nuit)

üéØ **Am√©liorations sugg√©r√©es :**
‚Ä¢ Ajouter une sp√©cialisation en soins intensifs (+15% de missions)
‚Ä¢ Mettre √† jour votre photo de profil
‚Ä¢ Compl√©ter la section "R√©f√©rences professionnelles"

Ces optimisations pourraient augmenter vos chances de s√©lection de 23% !`,
        timestamp: new Date(),
        suggestions: [
          'Comment ajouter une sp√©cialisation ?',
          'Aide pour les r√©f√©rences',
          'Optimise ma photo',
          'Calcule mon nouveau score'
        ],
        actions: [
          { type: 'profile', label: '‚úèÔ∏è Modifier mon profil', url: '/profile-creator' },
          { type: 'certification', label: 'üéì Voir les formations disponibles' }
        ]
      };
    }
    
    if (lowerMessage.includes('carri√®re') || lowerMessage.includes('planifie')) {
      return {
        role: 'assistant',
        content: `Plan de carri√®re personnalis√© bas√© sur votre profil et les tendances du march√© :

üìà **√âvolution recommand√©e (12-18 mois) :**
1. **Sp√©cialisation avanc√©e** : Formation en soins intensifs
2. **Leadership** : R√©f√©rent d'√©quipe sur missions longues
3. **Expertise technique** : Certification en nouvelles technologies m√©dicales

üí∞ **Projection salariale :**
‚Ä¢ Actuel : 25-28‚Ç¨/h
‚Ä¢ Objectif 12 mois : 30-35‚Ç¨/h (+20%)
‚Ä¢ Objectif 18 mois : 35-40‚Ç¨/h (+40%)

üéØ **Prochaines √©tapes imm√©diates :**
‚Ä¢ Accepter 2-3 missions en r√©animation pour renforcer l'expertise
‚Ä¢ Commencer la formation soins intensifs (3 mois)`,
        timestamp: new Date(),
        suggestions: [
          'Trouve des formations',
          'Calcule mon potentiel',
          'Vois les tendances march√©',
          'Planifie mes missions'
        ],
        actions: [
          { type: 'training', label: 'üéì Formations recommand√©es' },
          { type: 'analytics', label: 'üìä Voir les analytics de carri√®re', url: '/analytics-demo' }
        ]
      };
    }
    
    if (lowerMessage.includes('tarif') || lowerMessage.includes('n√©goci')) {
      return {
        role: 'assistant',
        content: `Analyse de n√©gociation pour votre profil en r√©animation :

üí° **Strat√©gie recommand√©e :**
Votre exp√©rience de 5 ans et vos certifications vous donnent un excellent levier de n√©gociation.

üìä **Donn√©es du march√© :**
‚Ä¢ Tarif moyen r√©animation : 26‚Ç¨/h
‚Ä¢ Votre profil justifie : 28-32‚Ç¨/h
‚Ä¢ Prime de nuit possible : +3-5‚Ç¨/h

üéØ **Script de n√©gociation :**
"Mon exp√©rience de 5 ans en r√©animation et mes certifications BLS/ACLS me permettent d'assurer une qualit√© de soins optimale. Le tarif de 30‚Ç¨/h refl√©terait mieux la valeur que j'apporte."

‚úÖ **Taux de r√©ussite estim√© : 78%**`,
        timestamp: new Date(),
        suggestions: [
          'Pr√©pare ma n√©gociation',
          'Vois d\'autres arguments',
          'Calcule ma valeur march√©',
          'Simule la discussion'
        ],
        actions: [
          { type: 'negotiate', label: 'üí¨ Simuler la n√©gociation' },
          { type: 'market', label: 'üìà Analyse d√©taill√©e du march√©' }
        ]
      };
    }

    // R√©ponse g√©n√©rique
    return {
      role: 'assistant',
      content: `Je comprends votre question. En tant qu'assistant IA sp√©cialis√© dans les carri√®res d'infirmiers, je peux vous aider avec :

üéØ **Mes sp√©cialit√©s :**
‚Ä¢ Recherche de missions adapt√©es √† votre profil
‚Ä¢ Optimisation de votre profil professionnel  
‚Ä¢ N√©gociation de tarifs et conditions
‚Ä¢ Planification de carri√®re personnalis√©e
‚Ä¢ Conseils pour formations et certifications

Comment puis-je vous accompagner plus sp√©cifiquement ?`,
      timestamp: new Date(),
      suggestions: [
        'Trouve-moi des missions',
        'Am√©liore mon profil',
        'Planifie ma carri√®re',
        'N√©gocie mes tarifs'
      ]
    };
  };

  const handleSendMessage = () => {
    if (!currentMessage.trim()) return;

    const userMessage: ConversationMessage = {
      role: 'user',
      content: currentMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setCurrentMessage('');
    setIsTyping(true);

    // Simuler un d√©lai de r√©ponse
    setTimeout(() => {
      const response = generateDemoResponse(currentMessage);
      setMessages(prev => [...prev, response]);
      setIsTyping(false);
    }, 1500);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setCurrentMessage(suggestion);
  };

  const handleActionClick = (action: RecommendedAction) => {
    if (action.url) {
      window.location.href = action.url;
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      {/* Navigation */}
      <nav className="bg-white dark:bg-gray-800 border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link href="/">
              <div className="flex items-center space-x-3 cursor-pointer">
                <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                  <Bot className="w-4 h-4 text-white" />
                </div>
                <span className="font-semibold text-xl text-blue-600">NurseLink AI</span>
              </div>
            </Link>
            <div className="flex items-center space-x-4">
              <Link href="/analytics-demo">
                <Button variant="outline">Analytics D√©mo</Button>
              </Link>
              <Link href="/">
                <Button variant="ghost">Retour Accueil</Button>
              </Link>
            </div>
          </div>
        </div>
      </nav>

      <div className="container mx-auto px-4 py-8">
        {/* En-t√™te */}
        <div className="mb-8">
          <div className="flex items-center gap-3 mb-4">
            <div className="p-3 bg-blue-600 rounded-lg">
              <Bot className="h-6 w-6 text-white" />
            </div>
            <div>
              <h1 className="text-3xl font-bold text-gray-900 dark:text-white">
                Assistant IA Personnel - D√©mo
              </h1>
              <p className="text-gray-600 dark:text-gray-300">
                D√©couvrez votre compagnon intelligent pour optimiser votre carri√®re
              </p>
            </div>
          </div>
        </div>

        <div className="grid lg:grid-cols-4 gap-6">
          {/* Panneau lat√©ral avec informations */}
          <div className="lg:col-span-1 space-y-6">
            {/* Actions rapides */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Sparkles className="h-5 w-5 text-blue-600" />
                  Actions rapides
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => handleSuggestionClick('Trouve-moi des missions adapt√©es')}
                >
                  <TrendingUp className="h-4 w-4 mr-2" />
                  Missions recommand√©es
                </Button>
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => handleSuggestionClick('Aide-moi √† n√©gocier un tarif')}
                >
                  <DollarSign className="h-4 w-4 mr-2" />
                  N√©gociation tarifs
                </Button>
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => handleSuggestionClick('Planifie ma carri√®re')}
                >
                  <Calendar className="h-4 w-4 mr-2" />
                  Plan de carri√®re
                </Button>
                <Button 
                  variant="outline" 
                  className="w-full justify-start"
                  onClick={() => handleSuggestionClick('Comment am√©liorer mon profil ?')}
                >
                  <FileText className="h-4 w-4 mr-2" />
                  Optimiser profil
                </Button>
              </CardContent>
            </Card>

            {/* Missions recommand√©es */}
            <Card>
              <CardHeader>
                <CardTitle>Missions pour vous</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {demoRecommendations.missions.slice(0, 3).map((mission, index) => (
                    <div key={index} className="p-3 border rounded-lg">
                      <h4 className="font-medium text-sm">{mission.title}</h4>
                      <p className="text-xs text-gray-600 dark:text-gray-400">
                        {mission.hourlyRate}‚Ç¨/h ‚Ä¢ {mission.specialization}
                      </p>
                      <p className="text-xs text-gray-500">{mission.establishment}</p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Profil utilisateur d√©mo */}
            <Card>
              <CardHeader>
                <CardTitle>Votre profil</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span>Sp√©cialisation:</span>
                    <Badge variant="secondary">R√©animation</Badge>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span>Exp√©rience:</span>
                    <span>5 ans</span>
                  </div>
                  <div className="flex justify-between text-sm">
                    <span>Score profil:</span>
                    <Badge className="bg-green-600">92/100</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Zone de conversation principale */}
          <div className="lg:col-span-3">
            <Card className="h-[600px] flex flex-col">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Bot className="h-5 w-5" />
                  Conversation avec l'assistant IA
                  <Badge variant="outline" className="ml-auto">Mode D√©mo</Badge>
                </CardTitle>
              </CardHeader>
              
              <CardContent className="flex-1 flex flex-col">
                {/* Messages */}
                <ScrollArea className="flex-1 mb-4">
                  <div className="space-y-4 pr-4">
                    {messages.map((message, index) => (
                      <div key={index} className={`flex gap-3 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                        {message.role === 'assistant' && (
                          <div className="p-2 bg-blue-100 dark:bg-blue-900 rounded-full">
                            <Bot className="h-4 w-4 text-blue-600" />
                          </div>
                        )}
                        
                        <div className={`max-w-[80%] ${message.role === 'user' ? 'order-first' : ''}`}>
                          <div className={`p-3 rounded-lg ${
                            message.role === 'user' 
                              ? 'bg-blue-600 text-white ml-auto' 
                              : 'bg-gray-100 dark:bg-gray-800'
                          }`}>
                            <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                          </div>
                          
                          {/* Suggestions */}
                          {message.suggestions && message.suggestions.length > 0 && (
                            <div className="mt-2 flex flex-wrap gap-1">
                              {message.suggestions.map((suggestion, idx) => (
                                <Button
                                  key={idx}
                                  variant="outline"
                                  size="sm"
                                  onClick={() => handleSuggestionClick(suggestion)}
                                  className="text-xs"
                                >
                                  {suggestion}
                                </Button>
                              ))}
                            </div>
                          )}
                          
                          {/* Actions recommand√©es */}
                          {message.actions && message.actions.length > 0 && (
                            <div className="mt-2 space-y-1">
                              {message.actions.map((action, idx) => (
                                <Button
                                  key={idx}
                                  variant="secondary"
                                  size="sm"
                                  onClick={() => handleActionClick(action)}
                                  className="text-xs w-full justify-start"
                                >
                                  {action.label}
                                </Button>
                              ))}
                            </div>
                          )}
                          
                          <div className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                            {message.timestamp.toLocaleTimeString()}
                          </div>
                        </div>
                        
                        {message.role === 'user' && (
                          <div className="p-2 bg-blue-600 rounded-full">
                            <User className="h-4 w-4 text-white" />
                          </div>
                        )}
                      </div>
                    ))}
                    
                    {/* Indicateur de frappe */}
                    {isTyping && (
                      <div className="flex gap-3">
                        <div className="p-2 bg-blue-100 dark:bg-blue-900 rounded-full">
                          <Bot className="h-4 w-4 text-blue-600" />
                        </div>
                        <div className="bg-gray-100 dark:bg-gray-800 p-3 rounded-lg">
                          <div className="flex space-x-1">
                            <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" />
                            <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }} />
                            <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }} />
                          </div>
                        </div>
                      </div>
                    )}
                    
                    <div ref={messagesEndRef} />
                  </div>
                </ScrollArea>

                {/* Zone de saisie */}
                <div className="flex gap-2">
                  <Input
                    value={currentMessage}
                    onChange={(e) => setCurrentMessage(e.target.value)}
                    onKeyPress={handleKeyPress}
                    placeholder="Tapez votre message... (Mode d√©mo - IA simul√©e)"
                    className="flex-1"
                    disabled={isTyping}
                  />
                  <Button 
                    onClick={handleSendMessage}
                    disabled={!currentMessage.trim() || isTyping}
                  >
                    <Send className="h-4 w-4" />
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}