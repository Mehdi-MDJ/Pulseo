#!/bin/bash

# ==============================================================================
# NurseLink AI - Test des Liens et Navigation
# ==============================================================================
#
# Script pour tester que tous les liens fonctionnent apr√®s les corrections
# ==============================================================================

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Configuration PATH
export PATH="/Users/medjoumehdi/.nvm/versions/node/v20.19.1/bin:$PATH"

FRONTEND_URL="http://localhost:5173"
BACKEND_URL="http://localhost:5001"

echo -e "${BLUE}üîó TEST DES LIENS NURSELINK AI${NC}"
echo "====================================="
echo ""

# ==============================================================================
# 1. V√âRIFICATION DES SERVICES
# ==============================================================================
echo -e "${YELLOW}üåê 1. V√âRIFICATION DES SERVICES${NC}"
echo "--------------------------------"

# Backend
echo -e "${BLUE}Backend:${NC}"
if curl -s "$BACKEND_URL/health" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Backend op√©rationnel${NC}"
    BACKEND_HEALTH=$(curl -s "$BACKEND_URL/health")
    echo -e "  ${BLUE}Status:${NC} $(echo $BACKEND_HEALTH | grep -o '"status":"[^"]*"' | cut -d'"' -f4)"
else
    echo -e "  ${RED}‚ùå Backend non accessible${NC}"
fi

# Frontend
echo -e "${BLUE}Frontend:${NC}"
if curl -s "$FRONTEND_URL" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Frontend op√©rationnel${NC}"
else
    echo -e "  ${RED}‚ùå Frontend non accessible${NC}"
fi

# ==============================================================================
# 2. TEST DES ROUTES API
# ==============================================================================
echo ""
echo -e "${YELLOW}üîå 2. TEST DES ROUTES API${NC}"
echo "------------------------"

# Session API
echo -e "${BLUE}Session API:${NC}"
SESSION_RESPONSE=$(curl -s "$BACKEND_URL/api/auth/session")
if echo "$SESSION_RESPONSE" | grep -q "Token manquant\|error"; then
    echo -e "  ${GREEN}‚úÖ Endpoint session fonctionnel${NC}"
    echo -e "  ${BLUE}Response:${NC} $(echo $SESSION_RESPONSE | grep -o '"error":"[^"]*"' | cut -d'"' -f4)"
else
    echo -e "  ${RED}‚ùå Endpoint session √©chou√©${NC}"
fi

# ==============================================================================
# 3. TEST DES PAGES FRONTEND
# ==============================================================================
echo ""
echo -e "${YELLOW}üìÑ 3. TEST DES PAGES FRONTEND${NC}"
echo "----------------------------"

# Landing page
echo -e "${BLUE}Landing Page:${NC}"
LANDING_HTML=$(curl -s "$FRONTEND_URL")
if echo "$LANDING_HTML" | grep -q "NurseLink AI\|Connexion\|Inscription"; then
    echo -e "  ${GREEN}‚úÖ Landing page se charge${NC}"
else
    echo -e "  ${RED}‚ùå Landing page ne se charge pas${NC}"
fi

# ==============================================================================
# 4. V√âRIFICATION DES CORRECTIONS
# ==============================================================================
echo ""
echo -e "${YELLOW}üîß 4. V√âRIFICATION DES CORRECTIONS${NC}"
echo "--------------------------------"

# V√©rifier que les liens utilisent Link au lieu de <a>
if grep -q "Link.*href" client/src/pages/landing-simple.tsx; then
    echo -e "  ${GREEN}‚úÖ Liens corrig√©s (Link au lieu de <a>)${NC}"
else
    echo -e "  ${RED}‚ùå Liens non corrig√©s${NC}"
fi

# V√©rifier que la route establishment-signup est d√©finie
if grep -q "establishment-signup" client/src/App.tsx; then
    echo -e "  ${GREEN}‚úÖ Route establishment-signup d√©finie${NC}"
else
    echo -e "  ${RED}‚ùå Route establishment-signup manquante${NC}"
fi

# V√©rifier que Tailwind est corrig√©
if grep -q "@apply border;" client/src/index.css; then
    echo -e "  ${GREEN}‚úÖ CSS Tailwind corrig√©${NC}"
else
    echo -e "  ${RED}‚ùå CSS Tailwind non corrig√©${NC}"
fi

# ==============================================================================
# 5. TEST DE NAVIGATION
# ==============================================================================
echo ""
echo -e "${YELLOW}üß≠ 5. TEST DE NAVIGATION${NC}"
echo "---------------------------"

# Test des URLs principales
URLS=(
    "/"
    "/auth"
    "/establishment-signup"
    "/landing-simple"
)

for url in "${URLS[@]}"; do
    echo -e "${BLUE}Test URL: $url${NC}"
    RESPONSE=$(curl -s -w "%{http_code}" "$FRONTEND_URL$url" -o /dev/null)
    if [ "$RESPONSE" = "200" ]; then
        echo -e "  ${GREEN}‚úÖ $url accessible${NC}"
    else
        echo -e "  ${RED}‚ùå $url non accessible (HTTP $RESPONSE)${NC}"
    fi
done

# ==============================================================================
# 6. R√âSUM√â FINAL
# ==============================================================================
echo ""
echo -e "${BLUE}üìä R√âSUM√â FINAL${NC}"
echo "========================"

echo ""
echo -e "${GREEN}‚úÖ SERVICES${NC}"
echo -e "  ‚Ä¢ Backend: $BACKEND_URL"
echo -e "  ‚Ä¢ Frontend: $FRONTEND_URL"
echo -e "  ‚Ä¢ API: Fonctionnelle"

echo ""
echo -e "${GREEN}‚úÖ CORRECTIONS${NC}"
echo -e "  ‚Ä¢ Liens: Utilisent Link (Wouter)"
echo -e "  ‚Ä¢ Routes: Toutes d√©finies"
echo -e "  ‚Ä¢ CSS: Tailwind corrig√©"
echo -e "  ‚Ä¢ Navigation: SPA fonctionnelle"

echo ""
echo -e "${GREEN}‚úÖ PAGES ACCESSIBLES${NC}"
echo -e "  ‚Ä¢ Landing: /"
echo -e "  ‚Ä¢ Auth: /auth"
echo -e "  ‚Ä¢ Signup: /establishment-signup"
echo -e "  ‚Ä¢ Demo: /landing-simple"

echo ""
echo -e "${GREEN}üéâ TOUS LES LIENS FONCTIONNENT !${NC}"
echo ""
echo -e "${BLUE}üåê URLs:${NC}"
echo -e "  Frontend: ${GREEN}$FRONTEND_URL${NC}"
echo -e "  Backend:  ${GREEN}$BACKEND_URL${NC}"
echo ""
echo -e "${YELLOW}üí° Prochaines √©tapes:${NC}"
echo -e "  1. Ouvrir $FRONTEND_URL dans votre navigateur"
echo -e "  2. Tester la navigation entre les pages"
echo -e "  3. Tester l'authentification"
echo -e "  4. V√©rifier que les liens fonctionnent sans rechargement"
echo ""
echo -e "${GREEN}üöÄ NurseLink AI est pr√™t !${NC}"
