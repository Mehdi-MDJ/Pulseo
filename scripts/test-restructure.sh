#!/bin/bash

# ==============================================================================
# NurseLink AI - Test Restructuration Compl√®te
# ==============================================================================
#
# Script pour v√©rifier que la restructuration fonctionne parfaitement
# ==============================================================================

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Configuration PATH
export PATH="/Users/medjoumehdi/.nvm/versions/node/v20.19.1/bin:$PATH"

FRONTEND_URL="http://localhost:5173"
BACKEND_URL="http://localhost:5001"

echo -e "${BLUE}üèóÔ∏è TEST RESTRUCTURATION COMPL√àTE${NC}"
echo "====================================="
echo ""

# ==============================================================================
# 1. V√âRIFICATION DE LA NOUVELLE STRUCTURE
# ==============================================================================
echo -e "${YELLOW}üìÅ 1. V√âRIFICATION DE LA NOUVELLE STRUCTURE${NC}"
echo "----------------------------------------"

# V√©rifier que les fichiers sont √† la racine
if [ -f "tailwind.config.js" ]; then
    echo -e "  ${GREEN}‚úÖ tailwind.config.js √† la racine${NC}"
else
    echo -e "  ${RED}‚ùå tailwind.config.js manquant${NC}"
fi

if [ -f "postcss.config.js" ]; then
    echo -e "  ${GREEN}‚úÖ postcss.config.js √† la racine${NC}"
else
    echo -e "  ${RED}‚ùå postcss.config.js manquant${NC}"
fi

if [ -f "vite.config.ts" ]; then
    echo -e "  ${GREEN}‚úÖ vite.config.ts √† la racine${NC}"
else
    echo -e "  ${RED}‚ùå vite.config.ts manquant${NC}"
fi

if [ -f "index.html" ]; then
    echo -e "  ${GREEN}‚úÖ index.html √† la racine${NC}"
else
    echo -e "  ${RED}‚ùå index.html manquant${NC}"
fi

if [ -d "src" ]; then
    echo -e "  ${GREEN}‚úÖ src/ √† la racine${NC}"
else
    echo -e "  ${RED}‚ùå src/ manquant${NC}"
fi

# V√©rifier que le dossier client n'existe plus
if [ ! -d "client" ]; then
    echo -e "  ${GREEN}‚úÖ Dossier client/ supprim√©${NC}"
else
    echo -e "  ${RED}‚ùå Dossier client/ existe encore${NC}"
fi

# ==============================================================================
# 2. V√âRIFICATION DES SERVICES
# ==============================================================================
echo ""
echo -e "${YELLOW}üåê 2. V√âRIFICATION DES SERVICES${NC}"
echo "--------------------------------"

# Frontend
echo -e "${BLUE}Frontend:${NC}"
if curl -s "$FRONTEND_URL" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Frontend op√©rationnel${NC}"
else
    echo -e "  ${RED}‚ùå Frontend non accessible${NC}"
fi

# Backend
echo -e "${BLUE}Backend:${NC}"
if curl -s "$BACKEND_URL/health" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Backend op√©rationnel${NC}"
else
    echo -e "  ${RED}‚ùå Backend non accessible${NC}"
fi

# ==============================================================================
# 3. TEST DES CONFIGURATIONS
# ==============================================================================
echo ""
echo -e "${YELLOW}‚öôÔ∏è 3. TEST DES CONFIGURATIONS${NC}"
echo "----------------------------"

# V√©rifier que la configuration Tailwind est correcte
if grep -q "content.*index.html" tailwind.config.js; then
    echo -e "  ${GREEN}‚úÖ Configuration Tailwind correcte${NC}"
else
    echo -e "  ${RED}‚ùå Configuration Tailwind incorrecte${NC}"
fi

# V√©rifier que Vite est simplifi√©
if grep -q "plugins.*react" vite.config.ts; then
    echo -e "  ${GREEN}‚úÖ Configuration Vite simplifi√©e${NC}"
else
    echo -e "  ${RED}‚ùå Configuration Vite incorrecte${NC}"
fi

# V√©rifier que PostCSS est correct
if grep -q "tailwindcss" postcss.config.js; then
    echo -e "  ${GREEN}‚úÖ Configuration PostCSS correcte${NC}"
else
    echo -e "  ${RED}‚ùå Configuration PostCSS incorrecte${NC}"
fi

# ==============================================================================
# 4. TEST DE NAVIGATION
# ==============================================================================
echo ""
echo -e "${YELLOW}üß≠ 4. TEST DE NAVIGATION${NC}"
echo "---------------------------"

# Test des URLs principales
URLS=(
    "/"
    "/auth"
    "/establishment-signup"
    "/landing-simple"
)

for url in "${URLS[@]}"; do
    echo -e "${BLUE}Test URL: $url${NC}"
    RESPONSE=$(curl -s -w "%{http_code}" "$FRONTEND_URL$url" -o /dev/null)
    if [ "$RESPONSE" = "200" ]; then
        echo -e "  ${GREEN}‚úÖ $url accessible${NC}"
    else
        echo -e "  ${RED}‚ùå $url non accessible (HTTP $RESPONSE)${NC}"
    fi
done

# ==============================================================================
# 5. V√âRIFICATION DES PROCESSUS
# ==============================================================================
echo ""
echo -e "${YELLOW}üîß 5. V√âRIFICATION DES PROCESSUS${NC}"
echo "--------------------------------"

# V√©rifier que Vite tourne
if pgrep -f "vite" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Vite en cours d'ex√©cution${NC}"
else
    echo -e "  ${RED}‚ùå Vite non d√©marr√©${NC}"
fi

# V√©rifier que le backend tourne
if pgrep -f "ts-node" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Backend en cours d'ex√©cution${NC}"
else
    echo -e "  ${RED}‚ùå Backend non d√©marr√©${NC}"
fi

# ==============================================================================
# 6. TEST DES ERREURS TAILWIND
# ==============================================================================
echo ""
echo -e "${YELLOW}üé® 6. TEST DES ERREURS TAILWIND${NC}"
echo "--------------------------------"

# V√©rifier qu'il n'y a pas d'erreurs dans les logs
if ! pgrep -f "Cannot apply unknown utility class" > /dev/null; then
    echo -e "  ${GREEN}‚úÖ Aucune erreur Tailwind d√©tect√©e${NC}"
else
    echo -e "  ${RED}‚ùå Erreurs Tailwind d√©tect√©es${NC}"
fi

# ==============================================================================
# 7. R√âSUM√â FINAL
# ==============================================================================
echo ""
echo -e "${BLUE}üìä R√âSUM√â FINAL${NC}"
echo "========================"

echo ""
echo -e "${GREEN}‚úÖ RESTRUCTURATION${NC}"
echo -e "  ‚Ä¢ Structure: Centralis√©e √† la racine"
echo -e "  ‚Ä¢ Configuration: Simplifi√©e"
echo -e "  ‚Ä¢ Dossier client: Supprim√©"
echo -e "  ‚Ä¢ Fichiers: Tous √† la racine"

echo ""
echo -e "${GREEN}‚úÖ SERVICES${NC}"
echo -e "  ‚Ä¢ Frontend: $FRONTEND_URL"
echo -e "  ‚Ä¢ Backend: $BACKEND_URL"
echo -e "  ‚Ä¢ Processus: Actifs"

echo ""
echo -e "${GREEN}‚úÖ NAVIGATION${NC}"
echo -e "  ‚Ä¢ Landing: /"
echo -e "  ‚Ä¢ Auth: /auth"
echo -e "  ‚Ä¢ Signup: /establishment-signup"
echo -e "  ‚Ä¢ Demo: /landing-simple"

echo ""
echo -e "${GREEN}‚úÖ TAILWIND CSS${NC}"
echo -e "  ‚Ä¢ Configuration: Correcte"
echo -e "  ‚Ä¢ Erreurs: Aucune"
echo -e "  ‚Ä¢ Classes: Fonctionnelles"

echo ""
echo -e "${GREEN}üéâ RESTRUCTURATION R√âUSSIE !${NC}"
echo ""
echo -e "${BLUE}üåê URLs:${NC}"
echo -e "  Frontend: ${GREEN}$FRONTEND_URL${NC}"
echo -e "  Backend:  ${GREEN}$BACKEND_URL${NC}"
echo ""
echo -e "${YELLOW}üí° Prochaines √©tapes:${NC}"
echo -e "  1. Ouvrir $FRONTEND_URL dans votre navigateur"
echo -e "  2. V√©rifier que Tailwind fonctionne sans erreurs"
echo -e "  3. Tester la navigation entre les pages"
echo -e "  4. V√©rifier que le style s'affiche correctement"
echo ""
echo -e "${GREEN}üöÄ NurseLink AI est pr√™t avec une structure optimis√©e !${NC}"
